<launch>
<!-- change the serial number to the correct one for the camera that is being used -->
  <arg name="serial_no"           default="943222110188"/>  
  <arg name="json_file_path"      default=""/>
  <arg name="camera1"              default="t265"/>
  <arg name="tf_prefix"           default="$(arg camera1)"/>
  <arg name="initial_reset"       default="true"/>

  <arg name="fisheye_width"       default="848"/> 
  <arg name="fisheye_height"      default="800"/>
  <arg name="enable_fisheye1"     default="false"/>
  <arg name="enable_fisheye2"     default="false"/>

  <arg name="fisheye_fps"         default="30"/>

  <arg name="gyro_fps"            default="200"/>
  <arg name="accel_fps"           default="62"/>
  <arg name="enable_gyro"         default="true"/>
  <arg name="enable_accel"        default="true"/>

  <arg name="enable_sync"           default="true"/>

  <arg name="linear_accel_cov"      default="0.01"/>
  <arg name="unite_imu_method"      default="linear_interpolation"/>
  <arg name="publish_odom_tf"       default="false"/>
  <arg name="odom_frame_id"         default="odom"/>
  <!-- <arg name="topic_odom_in"         default="/t265/odom/sample"/> -->
  <!-- <arg name="calib_odom_file"       default="$(find dev_platform_base)/config/calibration_odometry.json" />"/> -->
  <arg name="base_frame_id"         default="$(arg tf_prefix)_link"/>
  <arg name="pose_frame_id"         default="$(arg tf_prefix)_pose_frame"/>
  
  
  <group ns="$(arg camera1)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="tf_prefix"                value="$(arg tf_prefix)"/>
      <arg name="serial_no"                value="$(arg serial_no)"/>
      <!-- <arg name="json_file_path"           value="$(arg json_file_path)"/> -->

      <arg name="enable_sync"              value="$(arg enable_sync)"/>

      <arg name="fisheye_width"            value="$(arg fisheye_width)"/>
      <arg name="fisheye_height"           value="$(arg fisheye_height)"/>
      <arg name="enable_fisheye1"          value="$(arg enable_fisheye1)"/>
      <arg name="enable_fisheye2"          value="$(arg enable_fisheye2)"/>

      <arg name="fisheye_fps"              value="$(arg fisheye_fps)"/>
      <arg name="gyro_fps"                 value="$(arg gyro_fps)"/>
      <arg name="accel_fps"                value="$(arg accel_fps)"/>
      <arg name="enable_gyro"              value="$(arg enable_gyro)"/>
      <arg name="enable_accel"             value="$(arg enable_accel)"/>

      <arg name="linear_accel_cov"         value="$(arg linear_accel_cov)"/>
      <arg name="initial_reset"            value="$(arg initial_reset)"/>
      <arg name="unite_imu_method"         value="$(arg unite_imu_method)"/>
      <arg name="publish_odom_tf"          value="$(arg publish_odom_tf)"/>
      <!-- <arg name="topic_odom_in"            value="$(arg topic_odom_in)"/> -->
      
      <arg name="odom_frame_id"            value="$(arg odom_frame_id)"/>
      <arg name="base_frame_id"            value="$(arg base_frame_id)"/>
      <arg name="pose_frame_id"            value="$(arg pose_frame_id)"/>
    </include>
  </group>

  <!-- the realsense overrides the URDF transforms from the .xacro, so to over rule it back, we place the 
  base link to realsense link with a static tf -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_rs_t265_link" args="0.33 0 0.29 3.1457 3.1457 0 base_link $(arg tf_prefix)_link 100" />
  

<arg name="camera2" value="l515"/>
<arg name="is_hd" value="false"/>

  <group ns="$(arg camera2)">
  
  <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
        <arg name="serial_no" value="f0460650"/>
        
        <arg name="align_depth" value="true"/>
        <arg name="unite_imu_method" value="linear_interpolation"/>
        <arg name="enable_gyro" value="true"/>
        <arg name="enable_accel" value="true"/>
        <arg name="filters" value="pointcloud"/>
        <arg name="color_fps" value="30"/>
        <arg name="pointcloud_texture_stream" value="RS2_STREAM_ANY"/>

        

        <!-- High DEF CAM -->
        <arg if="$(arg is_hd)" name="depth_width" value="1024"/>
        <arg if="$(arg is_hd)" name="depth_height" value="768"/>
        <arg if="$(arg is_hd)" name="color_width" value="1920"/>
        <arg if="$(arg is_hd)" name="color_height" value="1080"/>
        <!-- STANDARD DEF CAM --> <!-- 여기 선택됨 -->
        <arg unless="$(arg is_hd)" name="depth_width" value="640"/>
        <arg unless="$(arg is_hd)" name="depth_height" value="480"/>
        <arg unless="$(arg is_hd)" name="color_width" value="1280"/>
        <arg unless="$(arg is_hd)" name="color_height" value="720"/>
    </include>
  
  </group>

    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_node">
      <remap from="cloud_in" to="/l515/depth/color/points" />
      <!-- publish는 scan으로 다시 내보내줌 , from과 to가 헤깔리지만 from이 노드에서 서브스크라이브 함-->
    </node>


  <node pkg="tf" type="static_transform_publisher" name="static_tf" args="0 0 0.05 0 0 0 t265_link l515_link 100" />
  
  
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> -->

</launch>

